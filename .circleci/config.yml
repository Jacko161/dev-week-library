# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  slack: circleci/slack@4.4.4
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:16.0.2
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - run:
          name: Extract Email Address of committer
          command: |
            COMMIT_EMAIL=$(git --no-pager log -1 -s --format="%ae")
            echo "export COMMIT_EMAIL=$COMMIT_EMAIL" >> $BASH_ENV

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Extract Email Address of committer
          command: |
            SLACK_USER_ID=$(curl -H "Authorization: Bearer $SLACK_ACCESS_TOKEN" -d "email=$COMMIT_EMAIL" https://slack.com/api/users.lookupByEmail | jq '.user.id')
            echo "export SLACK_USER_ID=$SLACK_USER_ID" >> $BASH_ENV
      - slack/notify:
          event: fail
          channel: '$SLACK_USER_ID'
          template: basic_fail_1
      - run:
          name: Fail Fast
          when: on_fail
          command: circleci-agent step halt
      - slack/notify:
          event: pass
          channel: '$SLACK_USER_ID'
          template: basic_on_hold_1
  deploy:
    docker:
      # specify the version you desire here
      - image: cimg/base:2021.07
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Extract Email Address of committer
          command: |
            COMMIT_EMAIL=$(git --no-pager log -1 -s --format="%ae")
            echo "export COMMIT_EMAIL=$COMMIT_EMAIL" >> $BASH_ENV
      - run:
          name: Get Slack User ID
          command: |
            SLACK_USER_ID=$(curl -H "Authorization: Bearer $SLACK_ACCESS_TOKEN" -d "email=$COMMIT_EMAIL" https://slack.com/api/users.lookupByEmail | jq '.user.id')
            echo "export SLACK_USER_ID=$SLACK_USER_ID" >> $BASH_ENV
      - run:
          command: |
            OUTPUT=$(curl --header "Content-Type: application/json" -H "Authorization: Bearer $AWX_API_TOKEN" -X POST "https://awx.jfleming.dev/api/v2/job_templates/Deploy API/launch" -L)
            echo $OUTPUT
            AWX_JOB_ID=$(echo $OUTPUT | jq -r '.url')
            echo $AWX_JOB_ID
            echo "export AWX_JOB_URL=https://awx.jfleming.dev$AWX_JOB_ID" >> $BASH_ENV
      - slack/notify:
          event: pass
          channel: '$SLACK_USER_ID'
          template: AWX_TEMPLATE
      - run: gradle artifactoryPublish


workflows:
  build_and_test:
    jobs:
      - build:
          context:
            - slack-secrets
      - hold:
          type: approval
          requires:
            - build
      - deploy:
         context:
            - artifactory-secrets
            - slack-secrets
            - AWX-secrets
         requires:
            - hold